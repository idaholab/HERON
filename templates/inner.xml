<Simulation verbosity='debug'>
  <RunInfo>
    <JobName></JobName>
    <WorkingDir>.</WorkingDir>
    <Sequence>arma_sampling, summarize, debug_print</Sequence>
    <!--<internalParallel>True</internalParallel> NOTE this was hanging on lemhi ... a lot-->
  </RunInfo>

  <Steps>
    <!-- HERON fills in ARMA sampling -->
    <MultiRun name='arma_sampling'>
      <Input class='DataObjects' type='PointSet'>dispatch_placeholder</Input>
      <Model class='Models' type='EnsembleModel'>sample_and_dispatch</Model>
      <Sampler class='Samplers' type='MonteCarlo'>mc_arma_dispatch</Sampler>
      <Output class='DataObjects' type='DataSet'>arma_samples</Output>
      <Output class='DataObjects' type='DataSet'>arma_metrics</Output>
    </MultiRun>
    <PostProcess name='summarize'>
      <Input class='DataObjects' type='PointSet'>arma_metrics</Input>
      <Model class='Models' type='PostProcessor'>average</Model>
      <Output class='DataObjects' type='PointSet'>metrics_avg</Output>
      <Output class='OutStreams' type='Print'>disp_results</Output>
    </PostProcess>
    <IOStep name="debug_print">
      <Input class='DataObjects' type='PointSet'>arma_samples</Input>
      <Output class='OutStreams' type='Print'>disp_debug</Output>
    </IOStep>
  </Steps>

  <VariableGroups>
    <Group name='GRO_dispatch'           >GRO_dispatch_in, GRO_dispatch_out, ClusterTime, Cluster</Group>
    <Group name='GRO_dispatch_in'        >GRO_dispatch_in_scalar, GRO_dispatch_in_Time</Group>
    <Group name='GRO_dispatch_out'       >GRO_dispatch_out_Time</Group>
    <Group name='GRO_dispatch_in_scalar' >GRO_capacities, scaling</Group>
    <Group name='GRO_dispatch_in_Time'   ><!-- HERON --></Group>
    <Group name='GRO_dispatch_out_Time'  >GRO_init_disp</Group>

    <Group name='GRO_armasamples'          >GRO_armasamples_in, GRO_armasamples_out</Group>
    <Group name='GRO_armasamples_in'       >GRO_armasamples_in_scalar</Group>
    <Group name='GRO_armasamples_out'      >GRO_armasamples_out_scalar</Group>
    <Group name='GRO_armasamples_in_scalar'>scaling, time_delta, GRO_capacities</Group>
    <Group name='GRO_armasamples_out_scalar'>NPV</Group>
    <!-- <Group name='GRO_armasamples_out_Time' >GRO_init_disp</Group> -->

    <!-- less metrics -->
    <Group name='GRO_final_return'>
      mean_NPV, std_NPV, med_NPV, max_NPV, min_NPV,
      perc_5_NPV, perc_95_NPV, samp_NPV, var_NPV
    </Group>
    <!-- more metrics -->
    <!--<Group name='GRO_final_return'>
      mean_NPV, std_NPV, skew_NPV, kurt_NPV, vc_NPV, med_NPV, max_NPV, min_NPV,
      perc_5_NPV, perc_95_NPV, samp_NPV, var_NPV
    </Group>-->

      <Group name="GRO_means">
        <!--HERON fills components -->
      </Group>
    <Group name='GRO_interp'>stepwise</Group>

    <Group name='GRO_capacities'>
      <!-- HERON fills components -->
    </Group>
    <Group name='GRO_init_disp'>
      <!-- HERON fills components -->
    </Group>
  </VariableGroups>

  <DataObjects>
    <DataSet name="arma_samples">
      <Input>GRO_armasamples_in</Input>
      <Output>GRO_armasamples_out</Output>
      <!-- <Index var="ClusterTime">GRO_armasamples_out_Time</Index>
      <Index var="Year">GRO_armasamples_out_Time</Index>
      <Index var="Cluster">GRO_armasamples_out_Time</Index> -->
    </DataSet>
    <PointSet name="arma_metrics">
      <Output>NPV</Output>
    </PointSet>
    <PointSet name="metrics_avg">
      <Output>GRO_final_return</Output>
    </PointSet>
    <DataSet name="disp_avg">
      <Output>GRO_means</Output>
      <Index var="Time">GRO_means</Index>
      <Index var="Year">GRO_means</Index>
    </DataSet>
    <!-- Ensemble Model Target Evaluations -->
    <!--     ARMA preprocessing ensemble -->
    <DataSet name="dispatch_eval">
      <Input>GRO_dispatch_in</Input>
      <!-- <Output>GRO_dispatch_out</Output> -->
      <Index var="Time">GRO_dispatch_in_Time</Index>
      <!-- <Index var="ClusterTime">GRO_dispatch_out_Time</Index> -->
      <Index var="Year">GRO_dispatch_in_Time</Index>
      <!-- <Index var="Year">GRO_dispatch_in_Time, GRO_dispatch_out_Time</Index> -->
      <!-- <Index var="Cluster">GRO_dispatch_out_Time</Index> -->
    </DataSet>

    <!-- Ensemble Model Placeholders -->
    <!--     ARMA preprocessing ensemble -->
    <PointSet name="dispatch_placeholder">
      <Input>GRO_dispatch_in_scalar</Input>
    </PointSet>
  </DataObjects>

  <Models>
    <!-- armas from pk filled in by HERON -->
    <ExternalModel name='dispatch' subType='' ModuleToLoad='../../../../src/dispatch'> <!-- TODO generic path -->
      <variables>GRO_dispatch, GRO_armasamples</variables>
      <!--<ExternalXML node='Dispatch' xmlToLoad='input_dispatch.xml'/>-->
    </ExternalModel>

    <EnsembleModel name='sample_and_dispatch' subType=''>
      <!-- armas filled in by HERON -->
      <Model class='Models' type='ExternalModel'>dispatch
        <Input            class='DataObjects' type='PointSet'>dispatch_placeholder</Input>
        <TargetEvaluation class='DataObjects' type='DataSet' >dispatch_eval</TargetEvaluation>
      </Model>
    </EnsembleModel>

    <PostProcessor name="average" subType="BasicStatistics">
      <expectedValue prefix="mean">NPV</expectedValue>
      <sigma prefix="std">NPV</sigma>
      <median prefix="med">NPV</median>
      <maximum prefix="max">NPV</maximum>
      <minimum prefix="min">NPV</minimum>
      <percentile prefix="perc">NPV</percentile>
      <samples prefix="samp">NPV</samples>
      <variance prefix="var">NPV</variance>
      <!-- additional optional metrics -->
      <!--skewness prefix="skew">NPV</skewness>
      <kurtosis prefix="kurt">NPV</kurtosis>
      <variationCoefficient prefix="vc">NPV</variationCoefficient-->
    </PostProcessor>
  </Models>

  <Files>
    <Input name="libs">../../heron.lib</Input>
    <!-- HERON -->
  </Files>

  <Samplers>
    <MonteCarlo name='mc_arma_dispatch'>
      <samplerInit>
        <initialSeed>42</initialSeed>
        <limit>3</limit>
      </samplerInit>
      <!-- HERON makes component capacities nodes, Outer fills them -->
      <constant name='scaling'>1.0</constant>
    </MonteCarlo>
  </Samplers>

  <OutStreams>
    <Print name='disp_debug'>
      <type>csv</type>
      <source>arma_samples</source>
    </Print>
    <Print name='disp_results'>
      <type>csv</type>
      <source>metrics_avg</source>
    </Print>
  </OutStreams>
</Simulation>
