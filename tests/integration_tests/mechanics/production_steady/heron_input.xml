<HERON>
  <TestInfo>
    <name>production</name>
    <author>talbpaul</author>
    <created>2020-05-26</created>
    <description>
      Tests including a consume-and-produce unit, and the pyomo dispatcher.
      Does not use an ARMA, but takes time discretization from user input.
      May be able to serve as a timing test in the future.
      ``steamer'' produces steam which is consumed by ``generator'' to produce electricity. This electricity
      can then be sold at the ``electr_market'' at a profit or ``electr_penalty'' at a cost.
    </description>
    <classesTested>HERON</classesTested>
  </TestInfo>

  <Case name="Sweep_Runs">
    <mode>sweep</mode>
    <num_arma_samples>2</num_arma_samples>
    <time_discretization>
      <end_time>8760</end_time>
      <num_steps>8761</num_steps>
    </time_discretization>
    <economics>
      <ProjectTime>3</ProjectTime>
      <DiscountRate>0.08</DiscountRate>
      <tax>0.0</tax>
      <inflation>0.0</inflation>
      <verbosity>50</verbosity>
    </economics>
    <dispatcher>
      <pyomo/>
    </dispatcher>
  </Case>

  <Components>
    <Component name="steamer">
      <produces resource="steam" dispatch="fixed">
        <capacity resource="steam">
          <sweep_values>1, 100</sweep_values>
        </capacity>
      </produces>
      <economics>
        <lifetime>27</lifetime>
      </economics>
    </Component>

    <Component name="generator">
      <produces resource="electricity" dispatch="independent">
        <consumes>steam</consumes>
        <capacity resource="steam">
          <fixed_value>-100</fixed_value>
        </capacity>
        <transfer>
          <linear>
            <rate resource="steam">-1</rate>
            <rate resource="electricity">0.5</rate>
          </linear>
        </transfer>
      </produces>
      <economics>
        <lifetime>27</lifetime>
      </economics>
    </Component>

    <Component name="electr_market">
      <demands resource="electricity" dispatch="dependent">
        <capacity>
          <fixed_value>-2</fixed_value>
        </capacity>
      </demands>
      <economics>
        <lifetime>3</lifetime>
        <CashFlow name="e_sales" type="repeating" taxable='True' inflation='none' >
          <driver>
            <Function method="electric_consume">transfers</Function>
          </driver>
          <reference_price>
            <fixed_value>1</fixed_value>
          </reference_price>
        </CashFlow>
      </economics>
    </Component>

    <Component name="electr_penalty">
      <demands resource="electricity" dispatch="dependent">
        <capacity>
          <fixed_value>-1e200</fixed_value>
        </capacity>
      </demands>
      <economics>
        <lifetime>3</lifetime>
        <CashFlow name="e_sales" type="repeating" taxable='True' inflation='none' >
          <driver>
            <Function method="electric_consume">transfers</Function>
          </driver>
          <reference_price>
            <fixed_value>-1</fixed_value>
          </reference_price>
        </CashFlow>
      </economics>
    </Component>

  </Components>

  <DataGenerators>
    <ARMA name='Speed' variable="Signal">%HERON%/tests/integration_tests/ARMA/Sine/arma.pk</ARMA>
    <Function name="transfers">transfers.py</Function> <!-- TODO specify the variables needed? -->
  </DataGenerators>

</HERON>
